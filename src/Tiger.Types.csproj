<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <Description>A collection of useful types and operations on types.</Description>
    <Copyright>©Cimpress 2016–2018</Copyright>
    <AssemblyTitle>Tiger Types</AssemblyTitle>
    <NeutralLanguage>en-US</NeutralLanguage>
    <VersionPrefix>5.0.0</VersionPrefix>
    <Authors>cosborn@cimpress.com</Authors>
    <TargetFrameworks>netstandard1.0;netstandard2.0</TargetFrameworks>
    <DefineConstants>$(DefineConstants);CODE_ANALYSIS;CONTRACTS_FULL</DefineConstants>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <DebugType>portable</DebugType>
    <PreserveCompilationContext>false</PreserveCompilationContext>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <CodeAnalysisRuleSet>../Tiger.ruleset</CodeAnalysisRuleSet>
    <AssemblyName>Tiger.Types</AssemblyName>
    <PackageId>Tiger.Types</PackageId>
    <PackageTags>option;maybe;either;union;task;functional</PackageTags>
    <PackageReleaseNotes><![CDATA[⁃ The library has been refactored completely, consuming much of the functionality of the deprecated Tiger.ErrorTypes.
⁃ See the wiki for migration details: https://github.com/Cimpress-MCP/Tiger-Types/wiki/Migration-to-5.0
⁃ The library now supports multiple target frameworks.
⁃ Relevant types have been marked as `readonly`, increasing performance in some scenarios.
  ⁃ Accordingly, many methods have been annotated with `in`.
⁃ The `Error` type has been promoted from Tiger.ErrorTypes
⁃ The `Try<TErr, TOk>` type has arrived, providiong the functionality of an optional either.]]></PackageReleaseNotes>
    <PackageProjectUrl>https://github.com/Cimpress-MCP</PackageProjectUrl>
    <PackageIconUrl>https://raw.githubusercontent.com/Cimpress-MCP/Tiger-Types/master/tiger_logo.png</PackageIconUrl>
    <RepositoryType>git</RepositoryType>
    <RepositoryUrl>https://github.com/Cimpress-MCP/Tiger-Types.git</RepositoryUrl>
  </PropertyGroup>

  <PropertyGroup>
    <Features>IOperation</Features>
    <LangVersion>latest</LangVersion>
  </PropertyGroup>
  
  <ItemGroup>
    <AdditionalFiles Include="../stylecop.json" />
  </ItemGroup>

  <ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.0' ">
    <PackageReference Include="System.ComponentModel.TypeConverter" Version="4.3.0" />
    <PackageReference Include="System.Diagnostics.Contracts" Version="4.3.0" />
    <PackageReference Include="System.ValueTuple" Version="4.4.0" />
  </ItemGroup>
  
  <ItemGroup>
    <PackageReference Include="System.Collections.Immutable" Version="1.4.0" />
    
    <PackageReference Include="Microsoft.CodeAnalysis.FxCopAnalyzers" Version="2.6.0" PrivateAssets="All" /> 
    <PackageReference Include="Microsoft.CodeQuality.Analyzers" Version="2.6.0" PrivateAssets="All" />
    <PackageReference Include="Microsoft.NetCore.Analyzers" Version="2.6.0" PrivateAssets="All" /> 
    <PackageReference Include="StyleCop.Analyzers" Version="1.1.0-beta006" PrivateAssets="All" /> 
    <PackageReference Include="Text.Analyzers" Version="2.6.0" PrivateAssets="All" /> 
  </ItemGroup>

  <ItemGroup>
    <Compile Update="Resources.Designer.cs">
      <DesignTime>True</DesignTime>
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Update="Resources.resx">
      <Generator>PublicResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
  </ItemGroup>

</Project>
